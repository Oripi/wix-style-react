@import '../common.scss';
@import '../Input/InputMixins.scss';
@import '../typography-helpers.scss';

$errorColor: #f2564d;
$statusColor: #7a92a5;
$disabledColor: #cbd3dc;

.root {
  position: relative;
  //display: flex;
  align-items: center;
  @include BoxSizing();
  @include FontRoman();

  .nbinput, input, .label + div {
    padding-left: 0;
    padding-right: 0;
  }

  .nbinput, input {
    opacity: 0;
    height: 36px;
    @include FontLight();
  }

  .message {
    font-size: 12px;
    line-height: 18px;
  }

  .helpMessage {
    color: $statusColor;
  }

  .errorMessage {
    color: $errorColor !important;
  }

  .label {
    @include Text($weight: thin, $size: medium, $secondary: true);

    transition:all .2s ease-in-out;
    position: absolute;
    top: 6px;
    padding: 0;
    color: $statusColor;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
  }

  &.size-normal {
    padding-bottom: 4px;
    @include Size($height: 24px, $fontSize: 16px);
  }

  &.size-small {
    padding-bottom: 4px;
    @include Size($height: 18px, $fontSize: 14px);

    .label {
      font-size: 14px;
    }
  }

  &.hasFocus,
  &.hasValue {
    .nbinput, input {
      border-bottom: 0;
      @include Placeholder($paletteE6);
      transition: opacity 0.3s ease-in-out;
      opacity: 1;
    }

    .bar {
      &:before, &:after {
        height: 1px;
        // background-color: $B10;
        background-color: #3899ec;
      }
    }
    .label {
      top: -12px;
      font-size: 12px;
    }
  }

  .bar {
    position: absolute;
    bottom: 0;
    left: -1px;
    right: -1px;
    height: 1px;
    background: transparent;
    &:before, &:after {
      content: '';
      height: 1px;
      width: 0;
      bottom: 0;
      position: absolute;
      background: transparent;
      transition: 0.3s all;
    }
    transition: 0.3s ease all;
  }
  @at-root {
    .hasFocus .barBlue:before,
    .hasFocus .barBlue:after {
      width:100%;
    }
    &.disabled {
      .label, .input {
        color: $disabledColor;
      }
    }
  }

  &:hover:not(.disabled) {
    .bar, .input:hover ~ .barBlue, .input.hasHover ~ .barBlue {
      transition: 0.3s ease all;
      background: $D60;
    }
  }

  &.hasError {
    .bar,
    .input:hover ~ .barBlue,
    .input.hasHover ~ .barBlue {
      background: $errorColor;
    }

    // .errorMessage {
    //   color: $errorColor;
    // }

    &:hover:not(.disabled) {
      .bar, .input:hover ~ .barBlue, .input.hasHover ~ .barBlue {
        background: $errorColor;
      }
    }

    &.hasFocus {
      .bar {
        &:before, &:after {
          background: $errorColor;
        }
      }
    }
  }
}
